
# 10/19/23
```{r}
library(tidyverse)
library(ggalt)
library(ggbeeswarm)
library(ggrepel)
```

```{r}
set.seed(1234)

simulations <- rbinom(n = 1000, size = 20, prob = .317)

table(simulations)
```

```{r}
set.seed(1234)

simulations <- rbinom(n = 1000, size = 15, prob = .326)

hist(simulations)
```










```{r}
set.seed(1234)

simulations <- rbinom(n = 1000, size = 1, prob = .377)

four_in_a_row <- mean(simulations == 1 & lead(simulations, 1) == 1 & lead(simulations, 2) == 1 & lead(simulations, 3) == 1)

odds <- 1/four_in_a_row
```







## 10/26/23

```{r}
library(tidyverse)
library(ggbeeswarm)
library(ggrepel)
set.seed(1234)
```

```{r}
players <- read_csv("https://thescoop.org/sports-data-files/wbb_players_2023.csv")
```
```{r}
activeplayers <- players |> filter(mp>0, position != "NULL") 
activeplayers <- activeplayers |> mutate(tspct=pts/(2*(fga+0.44*fta)))
summary(activeplayers$fga)
```
```{r}
shooters <- activeplayers |> filter(fga > 187)
```

```{r}
ggplot() + geom_beeswarm(data=shooters, aes(x=position, y=tspct), color="grey")
```
```{r}
umd <- activeplayers |> 
  filter(team == "Maryland") |> 
  filter(fga>182) |> 
  arrange(desc(tspct))

ggplot() + 
  geom_beeswarm(
    data=shooters, 
    groupOnX=TRUE, 
    aes(x=position, y=tspct), color="grey") + 
  geom_beeswarm(
    data=umd, 
    groupOnX=TRUE, 
    aes(x=position, y=tspct), color="red")
```
```{r}
ggplot() + 
  geom_beeswarm(
    data=shooters, 
    groupOnX=TRUE, 
    aes(x=position, y=tspct), color="grey") + 
  geom_beeswarm(
    data=umd, 
    groupOnX=TRUE, 
    aes(x=position, y=tspct), color="red") +
  geom_text_repel(
    data=umd, 
    aes(x=position, y=tspct, label=player))
```
```{r}
ggplot() + 
  geom_quasirandom(
    data=shooters, 
    groupOnX=TRUE, 
    aes(x=position, y=tspct), color="grey") + 
  geom_quasirandom(
    data=umd, 
    groupOnX=TRUE, 
    aes(x=position, y=tspct), color="red") +
  geom_text_repel(
    data=umd, 
    aes(x=position, y=tspct, label=player))
```







```{r}
library(tidyverse)
library(ggalt)
library(ggbeeswarm)
library(ggrepel)
```
```{r}
players <- read_csv("https://raw.githubusercontent.com/dwillis/hhs-snapshots/main/data/player_totals_20231130.csv") |> filter(mp > 0)
```
```{r}
ggplot() + geom_point(data=players, aes(x=mp, y=pts))
```
```{r}
topscorers <- players |> filter(pts > 175)
```

```{r}
ggplot() + 
  geom_point(data=players, aes(x=mp, y=pts), color="gray") +
  geom_point(data=topscorers, aes(x=mp, y=pts), color="black")
```
```{r}
ggplot() + 
  geom_point(data=players, aes(x=mp, y=pts), color="grey") + 
  geom_point(data=topscorers, aes(x=mp, y=pts), color="black") + 
  geom_encircle(data=topscorers, aes(x=mp, y=pts), s_shape=1, expand=1, colour="red")
```

```{r}
ggplot() + 
  geom_point(data=players, aes(x=mp, y=pts), color="grey") + 
  geom_point(data=topscorers, aes(x=mp, y=pts), color="black") + 
  geom_encircle(data=topscorers, aes(x=mp, y=pts), s_shape=0, expand=0, colour="red")
```

```{r}
ggplot() + 
  geom_point(data=players, aes(x=mp, y=pts), color="grey") + 
  geom_point(data=topscorers, aes(x=mp, y=pts), color="black") + 
  geom_text(data=topscorers, aes(x=mp, y=pts, label=full_name), hjust = 0, vjust=1) +
  geom_encircle(data=topscorers, aes(x=mp, y=pts), s_shape=.5, expand=.03, colour="red")
```








## 12/5/23

```{r}
logs <- read_csv("https://thescoop.org/sports-data-files/wbblogs24.csv")
rankings <- read_csv("https://thescoop.org/sports-data-files/wbb_rankings.csv")
logs23 <- read_csv("https://thescoop.org/sports-data-files/wbblogs23.csv")
```

```{r}
parity_index24 <- logs |> 
  group_by(Team, Conference) |> 
  summarise(srs_score = mean(TeamSRS), sos_score = mean(TeamSOS)) |> 
  mutate(parity_index = (srs_score + 100) / (sos_score + 100))

parity_index23 <- logs23 |> 
  group_by(Team, Conference) |> 
  summarise(srs_score = mean(TeamSRS), sos_score = mean(TeamSOS)) |> 
  mutate(parity_index = (srs_score + 100) / (sos_score + 100))
```
```{r}
parity_index24 |> 
  filter(Conference == 'Big Ten WBB') |> 
  ggplot() + 
  geom_point(aes(x=srs_score, y = sos_score, label = Team)) +
  geom_text(aes(x=srs_score, y = sos_score, label = Team))
```



