```{r}
library(tidyverse)
library(Hmisc)
```
```{r}
logs <- read_csv("https://dwillis.github.io/sports-data-files/cbblogs1523.csv")
```
```{r}
logs <- logs |> mutate(
  Differential = TeamScore - OpponentScore, 
  NetRebounds = TeamTotalRebounds - OpponentTotalRebounds,
  TurnoverMargin = TeamTurnovers - OpponentTurnovers)
```


```{r}
rebounds_turnovers <- lm(Differential ~ NetRebounds + TurnoverMargin, data=logs)
summary(rebounds_turnovers)
```
There seems to be a strong relationship between point differential and rebound differential. But, net rebounds is probably not a predictive stat to see which team won a game. 

```{r}
simplelogs <- logs |> select_if(is.numeric) |> select(-Game) |> select(Differential, NetRebounds, TurnoverMargin, TeamFGPCT, TeamTotalRebounds, OpponentFGPCT, OpponentTotalRebounds)
```


```{r}
cormatrix <- rcorr(as.matrix(simplelogs))

cormatrix$r
```
```{r}
model2 <- lm(Differential ~ NetRebounds + TurnoverMargin + TeamFGPCT + OpponentFGPCT, data=logs)
summary(model2)
```
```{r}
logs |> 
  filter(Team == "Michigan" & Season == '2020-2021' | Team == "Wisconsin" & Season == '2019-2020' | Team == "Michigan State" & Season == '2018-2019' | Team == "Michigan State" & Season == '2017-2018' | Team == 'Illinois' & Season == '2021-2022' | Team == 'Purdue' & Season == '2022-2023') |> 
  summarise(
    meanNetRebounds = mean(NetRebounds),
    meanTurnoverMargin = mean(TurnoverMargin),
    meanTeamFGPCT = mean(TeamFGPCT),
    meanOpponentFGPCT = mean(OpponentFGPCT)
  )
```
```{r}
# (netrebounds estimate * meanNetRebounds) + (turnover margin estimate * meanTurnoverMargin) + (TeamFGPCT estimate * meanTeamFGPCT) + (OpponentFGPCT estimate * meanOpponentFGPCT) + Intercept
(0.654800*6.05) + (-1.310579*0.6333333) + (90.805990*0.4543167) + (-91.351310*0.4107167) + 0.287665
```
```{r}
logs |> 
  filter(
    Team == "Maryland" & Season == '2022-2023'
    ) |> 
  summarise(
    meanNetRebounds = mean(NetRebounds),
    meanTurnoverMargin = mean(TurnoverMargin),
    meanTeamFGPCT = mean(TeamFGPCT),
    meanOpponentFGPCT = mean(OpponentFGPCT)
  )
```
```{r}
(0.654800*1.685714) + (-1.310579*0.9142857) + (90.805990*0.4517714) + (-91.351310*0.428) + 0.287665
```
```{r}
logs |> 
     filter(
         Team == "Maryland" & Season == '2022-2023'
     ) |> summarise(avg_score = mean(TeamScore), avg_opp = mean(OpponentScore))
```

## 9/28/23


```{r}
gamelogs <- read_csv("wbblogs23.csv")
```
```{r}
teamquality <- gamelogs |> 
  select(Conference, Team, TeamFGPCT, TeamTotalRebounds, OpponentFGPCT, OpponentTotalRebounds)
```

```{r}
teamtotals <- teamquality |> 
  group_by(Conference, Team) |> 
  summarise(
    FGAvg = mean(TeamFGPCT), 
    ReboundAvg = mean(TeamTotalRebounds), 
    OppFGAvg = mean(OpponentFGPCT),
    OffRebAvg = mean(OpponentTotalRebounds)
    ) 
```
```{r}
teamzscore <- teamtotals |> 
  mutate(
    FGzscore = as.numeric(scale(FGAvg, center = TRUE, scale = TRUE)),
    RebZscore = as.numeric(scale(ReboundAvg, center = TRUE, scale = TRUE)),
    OppZscore = as.numeric(scale(OppFGAvg, center = TRUE, scale = TRUE)) * -1,
    OppRebZScore = as.numeric(scale(OffRebAvg, center = TRUE, scale = TRUE)) * -1,
    TotalZscore = FGzscore + RebZscore + OppZscore + OppRebZScore
  )  
```

```{r}
head(teamzscore)
```
```{r}
teamzscore |> arrange(desc(TotalZscore))
```
```{r}
teamzscore |> 
  filter(Conference == "Big Ten WBB") |> 
  arrange(desc(TotalZscore)) |>
  select(Team, TotalZscore)
```
```{r}
powerfive_plus_one <- c("SEC WBB", "Big Ten WBB", "Pac-12 WBB", "Big 12 WBB", "ACC WBB", "Big East WBB")
teamzscore |> 
  filter(Conference %in% powerfive_plus_one) |> 
  arrange(desc(TotalZscore)) |>
  select(Team, TotalZscore)
```




## 11/9/23

```{r}
logs <- read_csv("https://dwillis.github.io/sports-data-files/cbblogs1524.csv")
```
```{r}
FGPCT<-logs %>% 
  select(Season, Game, TeamFull, TeamFGPCT, OpponentFGPCT) %>% 
  filter(TeamFull == "Maryland Terrapins") %>% 
  filter(Game <= 3)
```

```{r}
Terps<-FGPCT %>% 
  group_by(Season) %>% 
  summarise(
            count = n(),
            MeanFGPCT = mean(TeamFGPCT),
            MeanOppFGPCT = mean(OpponentFGPCT))
```

```{r}
library(ggalt)
```


```{r}
ggplot() + 
  geom_lollipop(
    data=Terps, 
    aes(y=Season, x=MeanFGPCT), 
    horizontal = TRUE
    )+
  labs(title = "Maryland's Field Goal Percentage in First Three Games", subtitle = "The Terps have started off the last several seasons with hot shooting")
```
## Here, we are able to see Maryland's field goal percentage from their first three games of every season since 2017-2018 (minus 2018-2019) as well as the number from Tuesday's game against Mount St Mary's. Marylad has started the season shooting the ball well in the vast majority of these seasons. In 2020-2021, the Terps started off the season red hot, shooting close to 60% in their first three games. The following season, Maryland cooled down a bit shooting just over 40%. 2021-2022 was a rough year for Maryland that including a stunning loss to George Mason at home. Several weeks later, Head Coach Mark Turgeon was fired. Last season in Kevin Willard's first season, the Terps got off to another hot start, shooting close to 50%. On Tuesday in Maryland's first game of the season, the Terps shot close to 505 as well. It will be interesting to see if this number stays close to where it has been over the years, because the Terp's competition over the first three games is tougher this season than it was last season. The first three games last season, Maryland played Niagara, Western Carolina, and Binghampton. This year in addition to Mount St Mary's, the Terps will play Davidson on Friday, and either Clemson or UAB on Saturday.



```{r}
library(rvest)
```
```{r}
url <- "http://www.cfbstats.com/2023/leader/national/team/offense/split01/category09/sort01.html"
```


```{r}
scoringoffense <- url %>% 
  read_html() %>% 
  html_table()

scoringdf <- scoringoffense[[1]]
```




