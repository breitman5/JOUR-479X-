# Mutating data

One of the most common data analysis techniques is to look at change over time. The most common way of comparing change over time is through percent change. The math behind calculating percent change is very simple, and you should know it off the top of your head. The easy way to remember it is:

`(new - old) / old`

Or new minus old divided by old. Your new number minus the old number, the result of which is divided by the old number. To do that in R, we can use `dplyr` and `mutate` to calculate new metrics in a new field using existing fields of data.

So first we'll import the tidyverse so we can read in our data and begin to work with it. Go ahead and do that:

```{r}
#| warning: false
#| message: false
library(tidyverse)
```

Now you'll need a common and simple dataset of total attendance at NCAA football games over the last few seasons.

```{r}
#| warning: false
#| message: false
#| results: asis
#| echo: false
library(downloadthis)
library(glue)

dllink <- download_link(
  link = "https://dwillis.github.io/sports-data-files/attendance.csv",
  button_label = "Download csv file",
  button_type = "danger",
  has_icon = TRUE,
  icon = "fa fa-save",
  self_contained = FALSE
)

glue("<pre><p><strong>For this walkthrough:</strong></p><p>{dllink}</p></pre>")

```

You'll import it something like this.

```{r}
attendance <- read_csv('data/attendance.csv')
```

If you want to see the first six rows -- handy to take a peek at your data -- you can use the function `head`.

```{r}
head(attendance)
```

What's one thing you notice about the data that might make year-over-year comparisons more complex?

**Answer** Something that might make it harder for attendance data to comapre yearly is schools when they switch conferences and the effect that might have on attendance. 

The code to calculate percent change is pretty simple. Remember, with `summarize`, we used `n()` to count things. With `mutate`, we use very similar syntax to calculate a new value using other values in our dataset. So in this case, we're trying to do (new-old)/old, but we're doing it with fields. If we look at what we got when we did `head`, you'll see there's \`2022\` as the new data, and we'll use \`2021\` as the old data. So we're looking at one year. Then, to help us, we'll use arrange again to sort it, so we get the fastest growing school over one year.

```{r}
attendance |> mutate(
  change = (`2022` - `2021`)/`2021`
) 
```
What do we see right away? Do those numbers look like we expect them to? No. They're a decimal expressed as a percentage. So let's fix that by multiplying by 100. 

```{r}
attendance |> mutate(
  change = ((`2022` - `2021`)/`2021`)*100
) 
```
Now, does this ordering do anything for us? No. Let's fix that with arrange. 

```{r}
attendance |> mutate(
  change = ((`2022` - `2021`)/`2021`)*100
) |> arrange(desc(change))
```

Who had the most growth in 2022 compared to the year before? What could account for that change? And what team(s) are the most interesting here?


**Answer** Among schools with a percent increase under 100, Tulane leads the way with a 97% increase in attendance from 2021. This is likely because Tulane had one of their most successful seasons in 2022. Hawaii and San Diego State had increase over 100%, but were also very much affected by the lifting of Covid restrictions in Hawaii and California, respectively. Kansas led all power 5 schools and they too, had one of their most successful seasons in school history. The Jayhawks had a 95% increase from 2021 to 2022. 

## Back to women's soccer

Let's turn back to the women's soccer match data from this season.

Import it like this:

```{r}
matches_2023 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2023.csv")
```

Previously we calculated totals for shots attempted and shots on goal for each time. Now let's do shots on goal and goals, using group_by() and summarize(), and then we'll use mutate to add a percentage to that and see what stands out.

```{r}
matches_2023 |> 
  group_by(team) |> 
  summarise(
    total_on_goal = sum(so_g),
    total_goals = sum(goals)
  ) |> 
  mutate(percent = (total_goals/total_on_goal)) |> 
  arrange(desc(percent))
```

What stands out to you here? Describe that below. Would you narrow down the results to certain teams based on the data? If so, do that in the code and explain why you did it below. Finally, what's the most interesting result to you that could be a story?

**Answer** What really stands out to be in this is how efficient California is. Despite only taking 15 shots on goals, they have scored 9 times. I would not narrow down the data because I think efficiency is a good representation of this data. Eastern Washngton has taken a lot more shots and have scored more goals than Cal, but have been less efficient in doing so. I think its' interesting how on the top ten of this list, there are three teams from California and one from Washington. 